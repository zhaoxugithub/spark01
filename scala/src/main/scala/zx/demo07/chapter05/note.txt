

函数式编程基础
    1)函数定义/声明
    2)函数运行机制
    3)递归  [推荐编程者用递归来解决问题, 算法基础, 邮差问题，最短路径，背包问题, 迷宫，回溯 ]
    4)过程
    5)惰性函数和异常


函数式编程高级
    1)值函数(函数字面量)
    2)高阶函数
    3)闭包
    4)应用函数
    5)柯里化函数，抽象控制...


学习顺序： 函数式编程基础->面向对象编程->函数式编程高级

========一些概念=======================
1.方法和函数
    在scala中，方法和函数 "几乎" 可以等同(比如他们的定义、使用、运行机制都一样的)，
    方法是类的一部分，而函数是一个对象可以赋值给一个变量。
    ***换句话来说: 在类中定义的函数即是方法。

    函数:function -> 函数式编程
    方法: method -> oop编程

2.函数式编程:
    函数式编程中, 函数是一等公民,像变量一样.
        既可以把A函数传入B函数,当成参数一样使用;
        也可以将函数赋值给另一个变量.

    函数的创建不用依赖于类或者对象，
        在Java当中，函数的创建则要依赖于类、抽象类或者接口.
        因为面向对象编程, 是以对象为基础的编程方式。

3. 在scala中,函数式编程和面向对象编程融合在一起了. 所以既有函数又有方法